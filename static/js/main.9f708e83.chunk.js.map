{"version":3,"sources":["panels/Home.js","App.js","img/persik.png","index.js"],"names":["Home","id","list","go","refresh","isFetching","Panel","PanelHeader","PullToRefresh","onRefresh","map","item","Link","href","client","public_id","ContentCard","style","marginLeft","marginRight","marginBottom","subtitle","header","SimpleCell","description","tags","e","join","before","Avatar","src","avatar","name","caption","text","App","useState","activePanel","setActivePanel","fetchedList","setList","setFetching","ScreenSpinner","size","popout","setPopout","useEffect","a","fetch","res","json","console","log","bridge","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchList","View","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"gTAiDeA,EA9BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,MAAME,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,WAA1B,OACZ,eAACC,EAAA,EAAD,CAAOL,GAAIA,EAAX,UACC,cAACM,EAAA,EAAD,yBACA,cAACC,EAAA,EAAD,CAAeC,UAAWL,EAASC,WAAYA,EAA/C,SACIH,GAAQA,EAAKQ,KAAI,SAAAC,GACpB,OACC,cAACC,EAAA,EAAD,CAAMC,KAAM,oBAAsBF,EAAKG,OAAOC,UAA9C,SACC,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,WAAY,MAAOC,YAAa,MAAOC,aAAc,OACrDC,SAAS,sEACTC,OAAQ,cAACC,EAAA,EAAD,CAClBC,YAAcb,EAAKc,KAAKf,KAAI,SAACgB,GAAD,iBAAWA,MAAKC,KAAK,KACzCC,OAAQ,cAACC,EAAA,EAAD,CAAQC,IAAKnB,EAAKG,OAAOiB,SAFvB,SAGXpB,EAAKG,OAAOkB,OAETC,QAAStB,EAAKuB,kBC2BfC,G,MC7DA,I,ODUH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGiBJ,mBAAS,MAH1B,mBAGV/B,EAHU,KAGEoC,EAHF,OAKWL,mBAAS,cAACM,EAAA,EAAD,CAAeC,KAAK,WALxC,mBAKVC,EALU,KAKFC,EALE,KAOjBC,qBAAU,WAAM,4CAQf,8BAAAC,EAAA,6DACCN,GAAY,GADb,SAEiBO,MAAM,kCAFvB,cAEKC,EAFL,gBAGoBA,EAAIC,OAHxB,OAGOhD,EAHP,OAIGiD,QAAQC,IAAIlD,GACZsC,EAAQtC,GACRuC,GAAY,GACdI,EAAU,MAPX,6CARe,sBACfQ,IAAOC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAaxClB,EAAQ,IAlBO,mCAmBf0B,KACE,IAEH,IAIM9D,EAAO,uCAAG,WAAOsB,GAAP,iBAAAqB,EAAA,sEACCC,MAAM,kCADP,cACXC,EADW,gBAEIA,EAAIC,OAFR,OAEThD,EAFS,OAGbsC,EAAQtC,GACRuC,GAAY,GAJC,2CAAH,sDAOb,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC0B,EAAA,EAAD,CAAM9B,YAAaA,EAAaO,OAAQA,EAAxC,SACC,cAAC,EAAD,CAAM3C,GAAG,OAAOC,KAAMqC,EAAapC,GAf5B,SAAAuB,GACVY,EAAeZ,EAAE0C,cAAcC,QAAQC,KAcOlE,QAASA,EAASC,WAAYA,YEhD9EgD,IAAOkB,KAAK,gBAEZC,IAASC,OAAO,cAAC,EAAD,IAASd,SAASe,eAAe,W","file":"static/js/main.9f708e83.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport SimpleCell from '@vkontakte/vkui/dist/components/SimpleCell/SimpleCell';\nimport ContentCard from '@vkontakte/vkui/dist/components/ContentCard/ContentCard';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PullToRefresh from '@vkontakte/vkui/dist/components/PullToRefresh/PullToRefresh';\n\nimport { Icon24Filter } from '@vkontakte/icons';\n\nconst Home = ({ id, go, list, refresh, isFetching }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Clientlist</PanelHeader>\n\t\t<PullToRefresh onRefresh={refresh} isFetching={isFetching}>\n\t    {list && list.map(item => {\n\t\t\treturn (\n\t\t\t\t<Link href={\"https://vk.com/id\" + item.client.public_id}>\n\t\t\t\t\t<ContentCard\n\t\t\t\t\t  style={{ marginLeft: '8px', marginRight: '8px', marginBottom: '8px' }}\n\t\t              subtitle=\"Новый клиент\"\n\t\t              header={<SimpleCell\n\t\t\t\t\t\tdescription={ item.tags.map((e) => `#${e}`).join(' ') }\n\t\t\t          \tbefore={<Avatar src={item.client.avatar}/>}\n\t\t\t        >{item.client.name}\n\t\t\t        </SimpleCell>}\n\t\t              caption={item.text}\n\t\t            />\n\t\t        </Link>\n\t\t\t);\n\t    })}\n\t    </PullToRefresh>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tlist: PropTypes.array\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedList, setList] = useState(null);\n\tconst [isFetching, setFetching] = useState(null);\n\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchList() {\n\t\t\tsetFetching(true);\n\t\t\tlet res = await fetch(`https://clientlist.ru/api/list`);\n  \t\t\tlet list = await res.json();\n  \t\t\tconsole.log(list);\n  \t\t\tsetList(list);\n  \t\t\tsetFetching(false);\n\t\t\tsetPopout(null);\n\n\t\t}\n\t\tsetList([]);\n\t\tfetchList();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst refresh = async (e) => {\n\t\tlet res = await fetch(`https://clientlist.ru/api/list`);\n  \t\tlet list = await res.json();\n  \t\tsetList(list);\n  \t\tsetFetching(false);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' list={fetchedList} go={go} refresh={refresh} isFetching={isFetching} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}