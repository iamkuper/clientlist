{"version":3,"sources":["panels/Home.js","App.js","img/persik.png","index.js"],"names":["moment","locale","Home","id","list","go","refresh","isFetching","user","Panel","PanelHeader","left","avatar","Avatar","size","src","Banner","mode","header","subheader","background","style","backgroundColor","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","actions","Link","href","Button","marginTop","marginBottom","PullToRefresh","onRefresh","map","item","client","public_id","ContentCard","marginLeft","marginRight","subtitle","unix","public_date","fromNow","text","SimpleCell","paddingLeft","description","tags","e","join","before","name","caption","App","useState","activePanel","setActivePanel","fetchedList","setList","setUser","setFetching","ScreenSpinner","popout","setPopout","useEffect","a","bridge","send","fetch","headers","method","body","JSON","stringify","account","json","res","i","includes","length","filter","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","attributes","setNamedItem","fetchList","View","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8cf1a47d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport moment_ru from 'moment/locale/ru';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport SimpleCell from '@vkontakte/vkui/dist/components/SimpleCell/SimpleCell';\nimport ContentCard from '@vkontakte/vkui/dist/components/ContentCard/ContentCard';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PullToRefresh from '@vkontakte/vkui/dist/components/PullToRefresh/PullToRefresh';\nimport Banner from '@vkontakte/vkui/dist/components/Banner/Banner';\n\nimport { Icon24Filter } from '@vkontakte/icons';\n\n\nmoment.locale('ru');\n\nconst Home = ({ id, go, list, refresh, isFetching, user }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader\n\t\t\tleft={user && user.avatar && <Avatar size={36} src={user.avatar} />}\n\t\t>Clientlist</PanelHeader>\n\t\t<Banner\n\t        mode=\"image\"\n\t        header=\"Мы ВКонтакте\"\n\t        subheader=\"Подписывайся на группу\"\n\t        background={\n\t          <div\n\t            style={{\n\t              backgroundColor: '#5b9be6',\n\t              backgroundImage: 'url(https://sun9-31.userapi.com/PQ4UCzqE_jue9hAINefBMorYCdfGXvcuV5nSjA/eYugcFYzdW8.jpg)',\n\t              backgroundPosition: 'right bottom',\n\t              backgroundSize: '102%',\n\t              backgroundRepeat: 'no-repeat',\n\t            }}\n\t          />\n\t        }\n\t        actions={<Link href={\"https://vk.com/clientlist_ru\"}><Button style={{ marginTop: '15px', marginBottom: '10px' }} mode=\"overlay_primary\">Перейти в группу</Button></Link>}\n      \t/>\n\t\t<PullToRefresh onRefresh={refresh} isFetching={isFetching}>\n\t    {list && list.map(item => {\n\t\t\treturn (\n\t\t\t\t<Link href={\"https://vk.com/id\" + item.client.public_id}>\n\t\t\t\t\t<ContentCard\n\t\t\t\t\t  style={{ marginLeft: '10px', marginRight: '10px', marginBottom: '10px' }}\n\t\t              subtitle={ moment.unix(item.public_date).fromNow() }\n\t\t              text={item.text}\n\t\t              header={<SimpleCell\n\t\t              \tstyle={{ marginLeft: '0px', paddingLeft: '0px' }}\n\t\t\t\t\t\tdescription={ item.tags.map((e) => `#${e}`).join(' ') }\n\t\t\t          \tbefore={<Avatar style={{ marginLeft: '0px', paddingLeft: '0px'}} src={item.client.avatar}/>}\n\t\t\t        >{item.client.name}\n\t\t\t        </SimpleCell>}\n\t\t              caption={item.text}\n\t\t            />\n\t\t        </Link>\n\t\t\t);\n\t    })}\n\t    </PullToRefresh>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tlist: PropTypes.array\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedList, setList] = useState(null);\n\tconst [user, setUser] = useState(null);\n\tconst [isFetching, setFetching] = useState(null);\n\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchList() {\n\n\t\t\tlet user = await bridge.send(\"VKWebAppGetUserInfo\");\n\n\t\t\tlet account = await fetch(`https://clientlist.ru/login/auto/${user.id}`, {\n\t\t\t    headers: {\n\t\t\t      'Accept': 'application/json',\n\t\t\t      'Content-Type': 'application/json'\n\t\t\t    },\n\t\t\t    method: \"POST\",\n\t\t\t    body: JSON.stringify(user)\n\t\t\t});\n  \t\t\taccount = await account.json();\n  \t\t\tsetUser(account);\n\n\t\t\tlet res = await fetch(`https://clientlist.ru/api/list`);\n  \t\t\tlet list = await res.json();\n\n  \t\t\tlist = list.map((i) => {\n  \t\t\t\tif (i.tags.includes('Крым') && (i.tags.length > 1)){\n  \t\t\t\t\ti.tags = i.tags.filter((i) => i !== 'Крым');\n  \t\t\t\t}\n  \t\t\t\ti.client.avatar = 'https://cdn4.iconfinder.com/data/icons/gradient-ui-1/512/message-512.png';\n  \t\t\t\treturn i;\n  \t\t\t});\n  \t\t\tsetList(list);\n\t\t\tsetPopout(null);\n\n\t\t}\n\n\t\tsetList([]);\n\t\tfetchList();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst refresh = async (e) => {\n\t\tsetFetching(true);\n\t\tlet res = await fetch(`https://clientlist.ru/api/list`);\n  \t\tlet list = await res.json();\n  \t\tlist = list.map((i) => {\n\t\t\tif (i.tags.includes('Крым') && (i.tags.length > 1)){\n\t\t\t\ti.tags = i.tags.filter((i) => i !== 'Крым');\n\t\t\t}\n\t\t\ti.client.avatar = 'https://cdn4.iconfinder.com/data/icons/gradient-ui-1/512/message-512.png';\t\t\n\t\t\treturn i;\n\t\t});\n  \t\tsetList(list);\n  \t\tsetFetching(false);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' list={fetchedList} go={go} refresh={refresh} isFetching={isFetching} user={user} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}