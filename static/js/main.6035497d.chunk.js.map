{"version":3,"sources":["panels/Home.js","App.js","img/persik.png","index.js"],"names":["moment","locale","Home","id","list","go","refresh","isFetching","Panel","PanelHeader","Banner","mode","header","subheader","background","style","backgroundColor","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","actions","Link","href","Button","marginTop","marginBottom","PullToRefresh","onRefresh","map","item","client","public_id","ContentCard","marginLeft","marginRight","subtitle","unix","public_date","fromNow","SimpleCell","description","tags","e","join","before","Avatar","src","avatar","name","caption","text","App","useState","activePanel","setActivePanel","fetchedList","setList","setFetching","ScreenSpinner","size","popout","setPopout","useEffect","a","fetch","res","json","i","bridge","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchList","View","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6035497d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport moment_ru from 'moment/locale/ru';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport SimpleCell from '@vkontakte/vkui/dist/components/SimpleCell/SimpleCell';\nimport ContentCard from '@vkontakte/vkui/dist/components/ContentCard/ContentCard';\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport PullToRefresh from '@vkontakte/vkui/dist/components/PullToRefresh/PullToRefresh';\nimport Banner from '@vkontakte/vkui/dist/components/Banner/Banner';\n\nimport { Icon24Filter } from '@vkontakte/icons';\n\n\nmoment.locale('ru');\n\nconst Home = ({ id, go, list, refresh, isFetching }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Clientlist</PanelHeader>\n\t\t<Banner\n\t        mode=\"image\"\n\t        header=\"Мы ВКонтакте\"\n\t        subheader=\"Подписывайся на группу\"\n\t        background={\n\t          <div\n\t            style={{\n\t              backgroundColor: '#5b9be6',\n\t              backgroundImage: 'url(https://sun9-31.userapi.com/PQ4UCzqE_jue9hAINefBMorYCdfGXvcuV5nSjA/eYugcFYzdW8.jpg)',\n\t              backgroundPosition: 'right bottom',\n\t              backgroundSize: '102%',\n\t              backgroundRepeat: 'no-repeat',\n\t            }}\n\t          />\n\t        }\n\t        actions={<Link href={\"https://vk.com/clientlist_ru\"}><Button style={{ marginTop: '15px', marginBottom: '10px' }} mode=\"overlay_primary\">Перейти в группу</Button></Link>}\n      \t/>\n\t\t<PullToRefresh onRefresh={refresh} isFetching={isFetching}>\n\t    {list && list.map(item => {\n\t\t\treturn (\n\t\t\t\t<Link href={\"https://vk.com/id\" + item.client.public_id}>\n\t\t\t\t\t<ContentCard\n\t\t\t\t\t  style={{ marginLeft: '10px', marginRight: '10px', marginBottom: '10px' }}\n\t\t              subtitle={ moment.unix(item.public_date).fromNow() }\n\t\t              header={<SimpleCell\n\t\t              \tstyle={{ marginLeft: '-10px'}}\n\t\t\t\t\t\tdescription={ item.tags.map((e) => `#${e}`).join(' ') }\n\t\t\t          \tbefore={<Avatar style={{ marginLeft: '-10px'}} src={item.client.avatar}/>}\n\t\t\t        >{item.client.name}\n\t\t\t        </SimpleCell>}\n\t\t              caption={item.text}\n\t\t            />\n\t\t        </Link>\n\t\t\t);\n\t    })}\n\t    </PullToRefresh>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tlist: PropTypes.array\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedList, setList] = useState(null);\n\tconst [isFetching, setFetching] = useState(null);\n\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchList() {\n\t\t\tlet res = await fetch(`https://clientlist.ru/api/list`);\n  \t\t\tlet list = await res.json();\n\n  \t\t\tlist = list.map((i) => {\n  \t\t\t\n  \t\t\t\ti.client.avatar = 'https://cdn1.iconfinder.com/data/icons/social-messaging-ui-color-round-1/254000/19-512.png';\n  \t\t\t\t\n  \t\t\t\treturn i;\n  \t\t\t});\n  \t\t\tsetList(list);\n\t\t\tsetPopout(null);\n\n\t\t}\n\t\tsetList([]);\n\t\tfetchList();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\tconst refresh = async (e) => {\n\t\tsetFetching(true);\n\t\tlet res = await fetch(`https://clientlist.ru/api/list`);\n  \t\tlet list = await res.json();\n  \t\tlist = list.map((i) => {\n  \t\t\t\ti.client.avatar = 'https://cdn1.iconfinder.com/data/icons/social-messaging-ui-color-round-1/254000/19-512.png';\n  \t\t\t\t\n  \t\t\t\treturn i;\n  \t\t\t});\n  \t\tsetList(list);\n  \t\tsetFetching(false);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' list={fetchedList} go={go} refresh={refresh} isFetching={isFetching} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}